#include <vector>
#include <string>

#include "ADT.h"

#ifndef AUTOM_AUTOM_H
#define  AUTOM_AUTOM_H

#define GEN_FILE_HEADER "Warning! This file was generated by autom. DO NOT EDIT!"


namespace autom {
    namespace eval {
        struct Object;
    }
    typedef eval::Object Object;

    bool objectIsBool(Object *object);
    bool objectIsString(Object *object);
    bool objectIsArray(Object *object);

    Object *toObject(bool & val);
    Object *toObject(std::string &val);
    Object *toObject(std::vector<Object *> &val);

    bool objectToBool(Object *object);
    StrRef objectToString(Object *object);
    ArrayRef<Object *> objectToVector(Object *object);
    

    typedef const char *CString;

    typedef Object *(NativeFunc)(unsigned c,std::pair<std::string,Object *> * object);

    #define AUTOM_NATIVE_FUNC(name) Object * name(unsigned c,std::pair<std::string,Object *> * args)

    typedef NativeFunc *NativeFuncRef;

    
    typedef enum : int {
        StringObject,
        ArrayObject,
        BooleanObject
    } ObjectType;

    struct Function {
        CString name;
        NativeFuncRef func;
        std::initializer_list<std::pair<CString,ObjectType>> params;
    };

    struct Extension {
        void *libData;
        CString name;
        std::vector<Function> funcs;
    };
    typedef Extension *(*AutomExtEntryFunc)();
}
#define AUTOM_EXT_ENTRY nativeExtMain
#define STR_WRAP(d) #d

#define EXTERN extern "C"

#ifdef __APPLE__
#define MODULE_EXPORT EXTERN __attribute__((visibility("default")))
#else
#define MODULE_EXPORT EXTERN
#endif

#define AUTOM_EXT_INIT() MODULE_EXPORT Extension * nativeExtMain()


#endif
